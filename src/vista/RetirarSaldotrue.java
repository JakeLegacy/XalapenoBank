/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Font;
import com.lowagie.text.FontFactory;
import com.lowagie.text.Image;
import com.lowagie.text.Paragraph;
import com.lowagie.text.pdf.PdfWriter;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;

import config.Conexion;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.util.Random;
import javax.swing.ImageIcon;

/**
 *
 * @author cesar
 */
public class RetirarSaldotrue extends javax.swing.JFrame {

    private String dato;

    Conexion con = new Conexion();
    Connection cn;
    Statement st;
    ResultSet rs = null;
    Random random = new Random();
    int codigo = 100000 + random.nextInt(900000);
    
    
    public void scaleImage3(){
    ImageIcon icon = new ImageIcon("C:\\Users\\cesar\\Downloads\\role_user_icon_217169 (1).png");
    java.awt.Image img = icon.getImage();
    java.awt.Image imgScale = img.getScaledInstance(Icon2.getWidth(), Icon2.getHeight(), java.awt.Image.SCALE_SMOOTH);
    ImageIcon scaledIcon = new ImageIcon(imgScale);
    Icon2.setIcon(scaledIcon);
    }
    
    public void generarPDF(int cantidadRetirada, int nuevoSaldo) {
         Document document = new Document();
        try {
            String filePath = "C:\\Users\\cesar\\Documents\\NetBeansProjects\\BancoAgain2\\ChequesRetiros\\Retiro.pdf";
            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(filePath));

            document.open();

            // Contenido del PDF
            Paragraph title = new Paragraph("CHEQUE RETIRO");
            document.add(title);

            // Agregar espacio entre párrafos
            document.add(new Paragraph("")); // Párrafo vacío

            document.add(new Paragraph("BANCO XALAPEÑO 2024"));
            document.add(new Paragraph("Comprobante de Retiro"));
            document.add(new Paragraph(""));
            document.add(new Paragraph(""));
            document.add(new Paragraph("Se ha retirado $" + cantidadRetirada + " de su cuenta."));
            document.add(new Paragraph("Su nuevo saldo es: $" + nuevoSaldo));
            document.add(new Paragraph("Código de retiro: "+codigo));
            document.add(new Paragraph("Gracias por su preferencia :D"));

            // Agregar imagen
            String imagePath = "C:\\Users\\cesar\\Desktop\\Carpeta del Banco\\Logo.png";
            try {
                Image image = Image.getInstance(imagePath);
                image.scaleAbsolute(5f * 28.33f, 5f * 28.33f); // Escalar la imagen a 10x10 cm
                document.add(image);
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error al cargar la imagen: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
            JOptionPane.showMessageDialog(null, "Cheque generado exitosamente.");
            document.close();
        } catch (DocumentException | FileNotFoundException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al generar el PDF: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            if (document != null && document.isOpen()) {
                document.close();
            }
        }
    }

    
    public RetirarSaldotrue() {
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        scaleImage3();
        Random random = new Random();

        try {
            cn = con.getConnection(); // Obtener conexión a la base de datos
            st = cn.createStatement(); // Inicializar Statement
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al conectar con la base de datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    public void setDato(String dato) {
        this.dato = dato;
        NombreTrans.setText(dato);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        NombreTrans = new javax.swing.JLabel();
        Icon2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Hind Madurai Medium", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 106));
        jLabel1.setText("RETIRAR SALDO");

        jButton1.setBackground(new java.awt.Color(200, 212, 210));
        jButton1.setFont(new java.awt.Font("Hind Madurai Light", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 102, 102));
        jButton1.setText("Cerrar Sesión");
        jButton1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton1.setFocusPainted(false);
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Hind Madurai Light", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 106));
        jLabel3.setText("Seleccione el monto:");

        jButton3.setBackground(new java.awt.Color(146, 205, 226));
        jButton3.setFont(new java.awt.Font("Hind Madurai Light", 1, 14)); // NOI18N
        jButton3.setText("$100");
        jButton3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton3.setFocusPainted(false);
        jButton3.setFocusable(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(146, 205, 226));
        jButton2.setFont(new java.awt.Font("Hind Madurai Light", 1, 14)); // NOI18N
        jButton2.setText("$500");
        jButton2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton2.setFocusPainted(false);
        jButton2.setFocusable(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(146, 205, 226));
        jButton4.setFont(new java.awt.Font("Hind Madurai Light", 1, 14)); // NOI18N
        jButton4.setText("$250");
        jButton4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton4.setFocusPainted(false);
        jButton4.setFocusable(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(146, 205, 226));
        jButton5.setFont(new java.awt.Font("Hind Madurai Light", 1, 14)); // NOI18N
        jButton5.setText("$1000");
        jButton5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton5.setFocusPainted(false);
        jButton5.setFocusable(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Hind Madurai Light", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 106));
        jLabel2.setText("Nombre del usuario:");

        NombreTrans.setFont(new java.awt.Font("Hind Madurai Light", 1, 14)); // NOI18N
        NombreTrans.setForeground(new java.awt.Color(0, 102, 106));

        jPanel2.setBackground(new java.awt.Color(146, 205, 226));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 127, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 183, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(24, 24, 24)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(NombreTrans, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(35, 35, 35))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Icon2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NombreTrans, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Icon2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        VentanaPrincipal ventanaPrincipal = new VentanaPrincipal();
        ventanaPrincipal.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            int cantidadATransferir = 100; // Cantidad a retirar, puedes cambiar esto según el botón
            String nombreUsuario = NombreTrans.getText();
            String querySaldoUsuario = "SELECT Saldo FROM Clientes WHERE Nombre = '" + nombreUsuario + "'";
            ResultSet rsSaldoUsuario = st.executeQuery(querySaldoUsuario);
            if (rsSaldoUsuario.next()) {
                int saldoUsuario = rsSaldoUsuario.getInt("Saldo");
                if (saldoUsuario >= cantidadATransferir) {
                    // Calcular nuevo saldo
                    int nuevoSaldoUsuario = saldoUsuario - cantidadATransferir;
                    // Actualizar saldo en la base de datos
                    String updateQueryUsuario = "UPDATE Clientes SET Saldo = " + nuevoSaldoUsuario + " WHERE Nombre = '" + nombreUsuario + "'";
                    st.executeUpdate(updateQueryUsuario);

                    // Generar código aleatorio de 6 dígitos

                    // Mostrar mensaje de éxito con el código aleatorio
                    String mensaje = "Retiro realizado correctamente. Su código es: " + codigo;
                    JOptionPane.showMessageDialog(this, mensaje);
                    generarPDF(cantidadATransferir, nuevoSaldoUsuario);
                } else {
                    JOptionPane.showMessageDialog(this, "No tienes suficiente saldo para realizar el retiro.");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al realizar el retiro: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            int cantidadATransferir = 250; // Cantidad a retirar, puedes cambiar esto según el botón
            String nombreUsuario = NombreTrans.getText();
            String querySaldoUsuario = "SELECT Saldo FROM Clientes WHERE Nombre = '" + nombreUsuario + "'";
            ResultSet rsSaldoUsuario = st.executeQuery(querySaldoUsuario);
            if (rsSaldoUsuario.next()) {
                int saldoUsuario = rsSaldoUsuario.getInt("Saldo");
                if (saldoUsuario >= cantidadATransferir) {
                    // Calcular nuevo saldo
                    int nuevoSaldoUsuario = saldoUsuario - cantidadATransferir;
                    // Actualizar saldo en la base de datos
                    String updateQueryUsuario = "UPDATE Clientes SET Saldo = " + nuevoSaldoUsuario + " WHERE Nombre = '" + nombreUsuario + "'";
                    st.executeUpdate(updateQueryUsuario);

                    // Generar código aleatorio de 6 dígitos


                    // Mostrar mensaje de éxito con el código aleatorio
                    String mensaje = "Retiro realizado correctamente. Su código es: " + codigo;
                    JOptionPane.showMessageDialog(this, mensaje);
                    generarPDF(cantidadATransferir, nuevoSaldoUsuario);
                } else {
                    JOptionPane.showMessageDialog(this, "No tienes suficiente saldo para realizar el retiro.");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al realizar el retiro: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            int cantidadATransferir = 500; // Cantidad a retirar, puedes cambiar esto según el botón
            String nombreUsuario = NombreTrans.getText();
            String querySaldoUsuario = "SELECT Saldo FROM Clientes WHERE Nombre = '" + nombreUsuario + "'";
            ResultSet rsSaldoUsuario = st.executeQuery(querySaldoUsuario);
            if (rsSaldoUsuario.next()) {
                int saldoUsuario = rsSaldoUsuario.getInt("Saldo");
                if (saldoUsuario >= cantidadATransferir) {
                    // Calcular nuevo saldo
                    int nuevoSaldoUsuario = saldoUsuario - cantidadATransferir;
                    // Actualizar saldo en la base de datos
                    String updateQueryUsuario = "UPDATE Clientes SET Saldo = " + nuevoSaldoUsuario + " WHERE Nombre = '" + nombreUsuario + "'";
                    st.executeUpdate(updateQueryUsuario);

                    // Generar código aleatorio de 6 dígitos


                    // Mostrar mensaje de éxito con el código aleatorio
                    String mensaje = "Retiro realizado correctamente. Su código es: " + codigo;
                    JOptionPane.showMessageDialog(this, mensaje);
                    generarPDF(cantidadATransferir, nuevoSaldoUsuario);
                } else {
                    JOptionPane.showMessageDialog(this, "No tienes suficiente saldo para realizar el retiro.");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al realizar el retiro: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            int cantidadATransferir = 1000; // Cantidad a retirar, puedes cambiar esto según el botón
            String nombreUsuario = NombreTrans.getText();
            String querySaldoUsuario = "SELECT Saldo FROM Clientes WHERE Nombre = '" + nombreUsuario + "'";
            ResultSet rsSaldoUsuario = st.executeQuery(querySaldoUsuario);
            if (rsSaldoUsuario.next()) {
                int saldoUsuario = rsSaldoUsuario.getInt("Saldo");
                if (saldoUsuario >= cantidadATransferir) {
                    // Calcular nuevo saldo
                    int nuevoSaldoUsuario = saldoUsuario - cantidadATransferir;
                    // Actualizar saldo en la base de datos
                    String updateQueryUsuario = "UPDATE Clientes SET Saldo = " + nuevoSaldoUsuario + " WHERE Nombre = '" + nombreUsuario + "'";
                    st.executeUpdate(updateQueryUsuario);

                    // Generar código aleatorio de 6 dígitos


                    // Mostrar mensaje de éxito con el código aleatorio
                    String mensaje = "Retiro realizado correctamente. Su código es: " + codigo;
                    JOptionPane.showMessageDialog(this, mensaje);
                    generarPDF(cantidadATransferir, nuevoSaldoUsuario);
                } else {
                    JOptionPane.showMessageDialog(this, "No tienes suficiente saldo para realizar el retiro.");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al realizar el retiro: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RetirarSaldotrue().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Icon2;
    private javax.swing.JLabel NombreTrans;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
